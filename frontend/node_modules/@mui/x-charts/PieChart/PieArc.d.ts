import * as React from 'react';
import { SpringValue } from '@react-spring/web';
import { HighlightScope } from '../context/HighlightProvider';
export interface PieArcClasses {
    /** Styles applied to the root element. */
    root: string;
    /** Styles applied to the root element when higlighted. */
    highlighted: string;
    /** Styles applied to the root element when faded. */
    faded: string;
}
export type PieArcClassKey = keyof PieArcClasses;
interface PieArcOwnerState {
    id: string;
    dataIndex: number;
    color: string;
    isFaded: boolean;
    isHighlighted: boolean;
    classes?: Partial<PieArcClasses>;
}
export declare function getPieArcUtilityClass(slot: string): string;
export declare const pieArcClasses: PieArcClasses;
export type PieArcProps = PieArcOwnerState & React.ComponentPropsWithoutRef<'path'> & {
    startAngle: SpringValue<number>;
    endAngle: SpringValue<number>;
    innerRadius: SpringValue<number>;
    outerRadius: SpringValue<number>;
    cornerRadius: SpringValue<number>;
    paddingAngle: SpringValue<number>;
    highlightScope?: Partial<HighlightScope>;
    onClick?: (event: React.MouseEvent<SVGPathElement, MouseEvent>) => void;
};
declare function PieArc(props: PieArcProps): React.JSX.Element;
declare namespace PieArc {
    var propTypes: any;
}
export { PieArc };
